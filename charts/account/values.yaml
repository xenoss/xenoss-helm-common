global:
  mail:
    smtp:
      host: <change me>
      port: <change me>
      authenticatorFrom:
        #        secret: <change me>
        usernameKey: smtp_login
        passwordKey: smtp_login
      tls: true
    fromPersonal: <change me>
    fromEmail: <change me>
    confirmUrl: <change me>
  cookie_domain: <change me>
  selfRegistrationEnabled: false
  throttle_login_delay: 5s
  auth:
    tokens:
      accessSecretExpiration: 2m
      refreshSecretExpiration: 30d
  init:
    admin:
      email: <change me>
      password:
        secret:
          name: ""
      firstname: <change me>
      lastname: <change me>
      roles: {}
      readonly: true
    organization:
      id: <change me>
      name: <change me>
      description: <change me>
      readonly: true
  mongo: "mongodb://mongo:27017/account"
  jvm:
    options: |
      -Xmx128M
      -Xss228k
      -XX:+UseG1GC
      -XX:+UseGCOverheadLimit
      -XX:GCTimeLimit=90
      -XX:-OmitStackTraceInFastThrow
      -Dorg.quartz.scheduler.skipUpdateCheck=true
      -Dsun.jnu.encoding=UTF-8
      -Dfile.encoding=UTF-8
  logs:
    loglevel: DEBUG
    configuration: |
      <configuration scan="true">
        <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
            <encoder>
                <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
            </encoder>
        </appender>
      
        <logger name="org" level="ERROR"/>
        <logger name="oap.http.Server" level="${OAP_HTTP_SERVER_LOGGING_LEVEL:-WARN}"/>
        <logger name="io.undertow" level="WARN"/>
        <logger name="oap.application.remote" level="WARN"/>
        <logger name="javax.management" level="ERROR" />
      
        <root level="${APP_LOGGING_LEVEL:-DEBUG}">
            <appender-ref ref="STDOUT"/>
        </root>
      </configuration>

  statefulset:
    enabled: true
    replicaCount: 1
  nameOverride: account
  fullnameOverride: ""
  commonAnnotations: {}
  commonLabels: {}

  #  podSecurityContext:
  #    enabled: true
  #    fsGroup: 1001
  #  containerSecurityContext:
  #    enabled: true
  #    runAsUser: 1001
  #    runAsNonRoot: true

  imageRegistry: ""
  imagePullSecrets: []
  extraDeploy: []

  metrics:
    enabled: true
    serviceMonitor:
      enabled: false
    podMonitor:
      enabled: true
      port: httpprivate
  image:
    registry: docker.xenoss.io
    repository: "xenoss-account"
    tag: "XXX"
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    ##   - myRegistryKeySecretName
    loglevel: DEBUG

  service:
    enabled: true
    clusterIP: None
    ports:
      http: 8080
      httpprivate: 8081
    ## Node ports to expose
    nodePorts:
      http: ""
      httpprivate: ""
    extraPorts:
      - name: http
        port: 8080
        targetPort: http
      - name: httpprivate
        port: 8081
        targetPort: httpprivate

common:
  containerPorts:
    - name: http
      containerPort: 8080
    - name: httpprivate
      containerPort: 8081

  envVars: |
    - name: MAIL_HOST
      value: {{ .Values.global.mail.smtp.host | quote }}
    - name: MAIL_PORT
      value: {{ .Values.global.mail.smtp.port | quote }}
    - name: MAIL_TLS
      value: {{ .Values.global.mail.smtp.tls | quote }}
    {{- if .Values.global.mail.smtp.authenticatorFrom.secret }}
    - name: MAIL_USERNAME
      valueFrom:
        secretKeyRef:
          name: {{ .Values.global.mail.smtp.authenticatorFrom.secret | quote }}
          key: {{ .Values.global.mail.smtp.authenticatorFrom.usernameKey | quote }}
    - name: MAIL_PASSWORD
      valueFrom:
        secretKeyRef:
          name: {{ .Values.global.mail.smtp.authenticatorFrom.secret | quote }}
          key: {{ .Values.global.mail.smtp.authenticatorFrom.passwordKey | quote }}
    {{- end }}
    - name: MAIL_FROM_PERSONAL
      value: {{ .Values.global.mail.fromPersonal | quote }}
    - name: MAIL_FROM_EMAIL
      value: {{ .Values.global.mail.fromEmail | quote }}
    - name: ACCOUNT_CONFIRM_URL
      value: {{ .Values.global.mail.confirmUrl | quote }}

    - name: COOKIE_DOMAIN
      value: {{ .Values.global.cookie_domain | quote }}
    - name: APP_LOGGING_LEVEL
      value: {{ .Values.global.logs.loglevel | quote }}
    - name: MONGO_CONNECTION_URL
      value: {{ .Values.global.mongo | quote }}

    - name: DEFAULT_SYSTEM_ADMIN_EMAIL
      value: {{ .Values.global.init.admin.email | quote }}
    - name: DEFAULT_SYSTEM_ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          name: {{ .Values.global.init.admin.password.secret.name | default ( printf "%s-admin" ( include "common.fullname" . ) ) | quote }}
          key: admin-password
    - name: DEFAULT_SYSTEM_ADMIN_FIRST_NAME
      value: {{ .Values.global.init.admin.firstname | quote }}
    - name: DEFAULT_SYSTEM_ADMIN_LAST_NAME
      value: {{ .Values.global.init.admin.lastname | quote }}
    - name: DEFAULT_SYSTEM_ADMIN_ROLES
      value: json({{ .Values.global.init.admin.roles | toJson }})
    - name: DEFAULT_SYSTEM_ADMIN_READ_ONLY
      value: {{ .Values.global.init.admin.readonly | toString | quote }}

    - name: DEFAULT_ORGANIZATION_ID
      value: {{ .Values.global.init.organization.id | quote }}
    - name: DEFAULT_ORGANIZATION_NAME
      value: {{ .Values.global.init.organization.name | quote }}
    - name: DEFAULT_ORGANIZATION_DESCRIPTION
      value: {{ .Values.global.init.organization.description | quote }}
    - name: DEFAULT_ORGANIZATION_READ_ONLY
      value: {{ .Values.global.init.organization.readonly | toString | quote }}

    - name: SELF_REGISTRATION_ENABLED
      value: {{ .Values.global.selfRegistrationEnabled | toString | quote }}
    - name: THROTTLE_LOGIN_DELAY
      value: {{ .Values.global.throttle_login_delay | quote }}

    - name: ACCESS_SECRET_EXPIRATION
      value: {{ .Values.global.auth.tokens.accessSecretExpiration | quote }}
    - name: REFRESH_SECRET_EXPIRATION
      value: {{ .Values.global.auth.tokens.refreshSecretExpiration | quote }}

  configMaps:
    default:
      enabled: true
      files:
        vm.options: "{{ .Values.global.jvm.options }}"
        logback.xml: "{{ .Values.global.logs.configuration }}"

  volumes:
    - name: "{{ include \"common.fullname\" $ }}"
      configMap:
        name: "{{ include \"common.fullname\" $ }}"
  volumeMounts:
    - name: "{{ include \"common.fullname\" $ }}"
      mountPath: "/opt/xenoss-account/conf/vm.options"
      subPath: vm.options
      readOnly: true
    - name: "{{ include \"common.fullname\" $ }}"
      mountPath: /opt/xenoss-account/conf/logback.xml
      subPath: logback.xml
      readOnly: true

  podAnnotations:
    reloader.stakater.com/auto: "true"
