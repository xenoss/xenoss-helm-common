globaL:
  ## @param extraDeploy Extra objects to deploy (evaluated as a template)
  ##
  extraDeploy: []

metrics:
  enabled: false
  service:
    ## @param metrics.service.ports.http Metrics service HTTP port
    ##
    ports:
      http: 8081
    ## @param metrics.service.annotations [object] Annotations for enabling prometheus to access the metrics endpoints
    ##
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "{{ .Values.metrics.service.ports.http }}"

  ## Prometheus Operator ServiceMonitor configuration
  serviceMonitor:
    enabled: false
    port: metrics
    endpoints:
      - path: /metrics
    path: ""
    namespace: ""
    interval: 30s
    scrapeTimeout: ""
    ##   scrapeTimeout: 30s
    labels: {}
    selector: {}
    relabelings: []
    metricRelabelings: []
    honorLabels: false
    jobLabel: ""

service:
  enabled: false
  type: ClusterIP
  ports: {}
#    http: 8080
#    private: 8081
  ## Node ports to expose
  nodePorts: {}
#    http: ""
#    private: ""
  clusterIP: ""
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  ##   - 10.10.10.0/24
  annotations: {}
  externalTrafficPolicy: Cluster
  extraPorts: []
#    - name: http
#      port: 8080
#      targetPort: http
#    - name: httpprivate
#      port: 8081
#      targetPort: http
  sessionAffinity: None
  sessionAffinityConfig: {}
  ##   clientIP:
  ##     timeoutSeconds: 300
