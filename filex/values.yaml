global:
  ## @param global.imageRegistry Global Docker image registry
  ## @param global.imagePullSecrets [array] Global Docker registry secret names as an array
  ##
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  ## @param extraDeploy Extra objects to deploy (evaluated as a template)
  ##
  extraDeploy: []

common:
  nameOverride: filex

  metrics:
    enabled: true
    service:
      ports:
        http: 8081
    serviceMonitor:
      enabled: true
      port: http_private

## @param nameOverride String to partially override filex.fullname include (will maintain the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override filex.fullname template
##
fullnameOverride: ""
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}

## Pods Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
## @param serviceAccount.create Specifies whether a ServiceAccount should be created
## @param serviceAccount.name Name of the service account to use. If not set and create is true, a name is generated using the fullname template.
## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
## @param serviceAccount.annotations Annotations for service account. Evaluated as a template. Only used if `create` is `true`.
##
serviceAccount:
  create: true
  name: ""
  automountServiceAccountToken: true
  annotations: {}

## FileX service parameters
##
service:
  ## @param service.type FileX Service type
  ##
  type: ClusterIP
  ports:
    http: 8080
    http_private: 8081
  ## Node ports to expose
  nodePorts:
    http: ""
    http_private: ""
  ## @param service.clusterIP FileX service Cluster IP
  ## e.g.:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.loadBalancerIP FileX service Load Balancer IP
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges FileX service Load Balancer sources
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ## e.g:
  ## loadBalancerSourceRanges:
  ##   - 10.10.10.0/24
  ##
  loadBalancerSourceRanges: []
  ## @param service.annotations Additional custom annotations for FileX service
  ## This can be used to set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}
  ## @param service.externalTrafficPolicy FileX service external traffic policy
  ## ref https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster
  ## @param service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
  ##
  extraPorts:
    - name: http
      port: 8080
      targetPort: http
    - name: http_private
      port: 8081
      targetPort: http
  ## @param service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
  ## If "ClientIP", consecutive client requests will be directed to the same mongos Pod
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  ##
  sessionAffinity: None
  ## @param service.sessionAffinityConfig Additional settings for the sessionAffinity
  ## sessionAffinityConfig:
  ##   clientIP:
  ##     timeoutSeconds: 300
  ##
  sessionAffinityConfig: {}

## 'volumePermissions' init container parameters
## Changes the owner and group of the persistent volume mount point to runAsUser:fsGroup values
##   based on the podSecurityContext/containerSecurityContext parameters
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`
  ##
  enabled: false

## @section Filex Image parameters

## Xenoss Filex image
## ref: https://hub.docker.com/r/bitnami/redis/tags/
## @param image.registry Filex image registry
## @param image.repository Filex image repository
## @param image.tag Filex image tag (immutable tags are recommended)
## @param image.digest Filex image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
## @param image.pullPolicy Filex image pull policy
## @param image.pullSecrets [array] Filex image pull secrets
## @param image.debug Enable image debug mode
##
image:
  registry: docker.xenoss.io
  repository: "xenoss-filex"
  tag: 18.11.2.15-452
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  loglevel: DEBUG

## @param command [array] Override default container command (useful when using custom images)
##
command: []
## @param args [array] Override default container args (useful when using custom images)
##
args: []
## @param lifecycleHooks for the container to automate configuration before or after startup
##
lifecycleHooks: {}
## @param extraEnvVars [array] Array with extra environment variables to add to the Filex container
## e.g:
## extraEnvVars:
##   - name: FOO
##     value: "bar"
##
extraEnvVars: []
## @param extraEnvVarsCM Name of existing ConfigMap containing extra env vars
##
extraEnvVarsCM: ""
## @param extraEnvVarsSecret Name of existing Secret containing extra env vars
##
extraEnvVarsSecret: ""

## @param replicaCount Number of FileX replicas to deploy
##
replicaCount: 1

## @param extraVolumes [array] Optionally specify extra list of additional volumes for Filex pods
##
extraVolumes: []
## @param extraVolumeMounts [array] Optionally specify extra list of additional volumeMounts for Filex container(s)
##
extraVolumeMounts: []

## @param podLabels [object] Extra labels for FileX pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations [object] Annotations for FileX pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## @param nodeSelector [object] Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Filex containers' resource requests and limits
## ref: https://kubernetes.io/docs/user-guide/compute-resources/
## @param resources.limits [object] The resources limits for the Filex container
## @param resources.requests [object] The requested resources for the Filex container
##
resources:
  limits: {}
  requests:
    memory: 256Mi
    cpu: 300m
## Container ports
##
containerPorts:
  http: 8080
  http_private: 8081
## @param extraContainerPorts [array] Array with extra container ports to add to the Filex container
## e.g:
## extraContainerPorts:
##   - name: additional-port
##     value: 8888
##
extraContainerPorts:
  - name: http
    containerPort: 8080
  - name: http_private
    containerPort: 8081
## Configure Pods Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param podSecurityContext.enabled Enabled Filex pods' Security Context
## @param podSecurityContext.fsGroup Set Filex pod's Security Context fsGroup
##
podSecurityContext:
  enabled: true
  fsGroup: 1001
## Configure Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## @param containerSecurityContext.enabled Enabled Apache Server containers' Security Context
## @param containerSecurityContext.runAsUser Set Apache Server containers' Security Context runAsUser
## @param containerSecurityContext.runAsNonRoot Set Controller container's Security Context runAsNonRoot
##
containerSecurityContext:
  enabled: true
  runAsUser: 1001
  runAsNonRoot: true

mongo_host: mongodb

vm_options: |
  -Xmx128M
  -Xss228k
  -XX:+UseG1GC
  -XX:+UseGCOverheadLimit
  -XX:GCTimeLimit=90
  -XX:-OmitStackTraceInFastThrow
  -Dorg.quartz.scheduler.skipUpdateCheck=true
  -Dsun.jnu.encoding=UTF-8
  -Dfile.encoding=UTF-8

logback_xml: |
  <configuration scan="true">
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <logger name="org" level="ERROR"/>
    <logger name="oap.http.Server" level="${OAP_HTTP_SERVER_LOGGING_LEVEL:-WARN}"/>
    <logger name="oap.application.remote" level="WARN"/>
    <logger name="javax.management" level="ERROR" />

    <root level="${APP_LOGGING_LEVEL:-DEBUG}">
        <appender-ref ref="STDOUT"/>
    </root>
  </configuration>


config: |
  services {
    workflow.parameters.workflow.input = []
  }
